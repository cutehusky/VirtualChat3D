@startuml
class NetworkController {
    - {static} Instance
    + {static} GetInstance()
    - clientAESKey: Buffer[]
    - clientRSAPublicKey: NodeRSA[]
    - io: Server
    - serverPrivateKey: NodeRSA
    - socketEventDict: Dict[string, function]
    + clientList: Dict[string, Socket]
    + SubscribeEvent(eventName:string, callback: function(socket: Socket, data: Object))
    + encryptDataAES(data: string, key: Buffer): Buffer
    + decryptDataAES(data: Buffer, key: Buffer): string
    + OnInit()
}

class FriendController {
    + {static}processFriendRequest(socket: Socket, data: Object)
    + {static}processFriendRequestAccept(socket: Socket, data: Object)
    + {static}processFriendRequestRefuse(socket: Socket, data: Object)
    + {static}processViewFriendList(socket: Socket, data: Object)
    + {static}processRemoveFriend(socket: Socket, data: Object)
}

class MessageController {
    + {static}processSendMessage(socket: Socket, data: Object)
    + {static}processViewMessage(socket: Socket, data: Object)
}

class AdminController {
    + {static}processLockUser(socket: Socket, data: Object)
    + {static}processUnlockUser(socket: Socket, data: Object)
    + {static}processRemoveUser(socket: Socket, data: Object)
    + {static}processViewSystemInfo(socket: Socket, data: Object)
}

class FirebaseDataModel {
    - {static} Instance
    + {static} GetInstance()
    + verifyToken(token: string): string
    + lockUser(userId: string)
    + unlockUser(userId: string)
    + deleteUser(userId: string)
    + friendRemove(userId: string)
    + friendRequest(userId: string)
    + friendRequestAccept(userId: string)
    + friendRequestRefuse(userId: string)
    + getFriendList(userId: string)
    + messageWrite(messageId: string, messageData: Object)
    + getMessage(messageId: string): Object[]
    + getAnalyticsData(): Object
    + OnInit()
}

NetworkController o-- AdminController
NetworkController o-- MessageController
NetworkController o-- FriendController
AdminController o-- FirebaseDataModel
MessageController o-- FirebaseDataModel
FriendController o-- FirebaseDataModel
@enduml